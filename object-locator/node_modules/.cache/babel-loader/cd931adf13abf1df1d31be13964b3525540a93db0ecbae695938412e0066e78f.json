{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\DELL\\\\Desktop\\\\object_locator\\\\object-locator\\\\src\\\\MyComponents\\\\voice.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Voice = () => {\n  _s();\n  const [recording, setRecording] = useState(false);\n  const [audioText, setAudioText] = useState('');\n  const [show, setShow] = useState(false);\n  const handleButtonClick = async () => {\n    try {\n      setRecording(true);\n\n      // Make a request to the Python backend to start recording\n      const response = await fetch('http://localhost:5000/api/record-sound', {\n        method: 'POST'\n      });\n      const resultData = await response.json();\n      setAudioText(resultData.text);\n      setRecording(false);\n    } catch (error) {\n      console.error('Error:', error);\n      setRecording(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Modal, {\n    show: show,\n    onHide: () => setShow(false),\n    children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n      closeButton: true,\n      children: /*#__PURE__*/_jsxDEV(Modal.Title, {\n        children: \"Voice Popup\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: transcript\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"secondary\",\n        onClick: () => setShow(false),\n        children: \"Close\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n};\n_s(Voice, \"rPsDfU9/V96sVB0RKTrOmfD7H4A=\");\n_c = Voice;\nexport default Voice;\nvar _c;\n$RefreshReg$(_c, \"Voice\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Voice","_s","recording","setRecording","audioText","setAudioText","show","setShow","handleButtonClick","response","fetch","method","resultData","json","text","error","console","Modal","onHide","children","Header","closeButton","Title","fileName","_jsxFileName","lineNumber","columnNumber","Body","transcript","Button","variant","onClick","_c","$RefreshReg$"],"sources":["C:/Users/DELL/Desktop/object_locator/object-locator/src/MyComponents/voice.js"],"sourcesContent":["import React, { useState } from 'react';\r\n\r\nconst Voice = () => {\r\n    const [recording, setRecording] = useState(false);\r\n    const [audioText, setAudioText] = useState('');\r\n    const [show, setShow] = useState(false);\r\n\r\n    const handleButtonClick = async () => {\r\n        try {\r\n      setRecording(true);\r\n\r\n      // Make a request to the Python backend to start recording\r\n      const response = await fetch('http://localhost:5000/api/record-sound', {\r\n        method: 'POST',\r\n      });\r\n      const resultData = await response.json();\r\n      setAudioText(resultData.text);\r\n        setRecording(false);\r\n    } catch (error) {\r\n      console.error('Error:', error);\r\n      setRecording(false);\r\n    }\r\n\r\n    };\r\n\r\n    return (\r\n    <Modal show={show} onHide={() => setShow(false)}>\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>Voice Popup</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <p>{transcript}</p>\r\n          <Button variant=\"secondary\" onClick={() => setShow(false)}>\r\n            Close\r\n          </Button>\r\n        </Modal.Body>\r\n      </Modal>\r\n  );\r\n}\r\n\r\nexport default Voice;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,MAAMC,KAAK,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAChB,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGN,QAAQ,CAAC,KAAK,CAAC;EACjD,MAAM,CAACO,SAAS,EAAEC,YAAY,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAC9C,MAAM,CAACS,IAAI,EAAEC,OAAO,CAAC,GAAGV,QAAQ,CAAC,KAAK,CAAC;EAEvC,MAAMW,iBAAiB,GAAG,MAAAA,CAAA,KAAY;IAClC,IAAI;MACNL,YAAY,CAAC,IAAI,CAAC;;MAElB;MACA,MAAMM,QAAQ,GAAG,MAAMC,KAAK,CAAC,wCAAwC,EAAE;QACrEC,MAAM,EAAE;MACV,CAAC,CAAC;MACF,MAAMC,UAAU,GAAG,MAAMH,QAAQ,CAACI,IAAI,CAAC,CAAC;MACxCR,YAAY,CAACO,UAAU,CAACE,IAAI,CAAC;MAC3BX,YAAY,CAAC,KAAK,CAAC;IACvB,CAAC,CAAC,OAAOY,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,QAAQ,EAAEA,KAAK,CAAC;MAC9BZ,YAAY,CAAC,KAAK,CAAC;IACrB;EAEA,CAAC;EAED,oBACAJ,OAAA,CAACkB,KAAK;IAACX,IAAI,EAAEA,IAAK;IAACY,MAAM,EAAEA,CAAA,KAAMX,OAAO,CAAC,KAAK,CAAE;IAAAY,QAAA,gBAC5CpB,OAAA,CAACkB,KAAK,CAACG,MAAM;MAACC,WAAW;MAAAF,QAAA,eACvBpB,OAAA,CAACkB,KAAK,CAACK,KAAK;QAAAH,QAAA,EAAC;MAAW;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAa;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC1B,CAAC,eACf3B,OAAA,CAACkB,KAAK,CAACU,IAAI;MAAAR,QAAA,gBACTpB,OAAA;QAAAoB,QAAA,EAAIS;MAAU;QAAAL,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACnB3B,OAAA,CAAC8B,MAAM;QAACC,OAAO,EAAC,WAAW;QAACC,OAAO,EAAEA,CAAA,KAAMxB,OAAO,CAAC,KAAK,CAAE;QAAAY,QAAA,EAAC;MAE3D;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACR,CAAC;AAEd,CAAC;AAAAzB,EAAA,CApCKD,KAAK;AAAAgC,EAAA,GAALhC,KAAK;AAsCX,eAAeA,KAAK;AAAC,IAAAgC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}