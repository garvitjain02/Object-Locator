{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\DELL\\\\Desktop\\\\object_locator\\\\object-locator\\\\src\\\\MyComponents\\\\voice.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Voice = () => {\n  _s();\n  const [recording, setRecording] = useState(false);\n  const [audioText, setAudioText] = useState('');\n  const handleButtonClick = async () => {\n    try {\n      setRecording(true);\n\n      // Make a request to the Python backend to start recording\n      const response = await fetch('http://localhost:5000/api/record-sound', {\n        method: 'POST'\n      });\n      const resultData = await response.json();\n      setAudioText(resultData.text);\n      setRecording(false);\n    } catch (error) {\n      console.error('Error:', error);\n      setRecording(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleButtonClick,\n      disabled: recording,\n      children: recording ? 'Recording...' : 'Record Sound'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: audioText\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n};\n_s(Voice, \"eQMdBu9a/w5r4QC/lLyN19klCss=\");\n_c = Voice;\nexport default v;\nvar _c;\n$RefreshReg$(_c, \"Voice\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Voice","_s","recording","setRecording","audioText","setAudioText","handleButtonClick","response","fetch","method","resultData","json","text","error","console","children","onClick","disabled","fileName","_jsxFileName","lineNumber","columnNumber","_c","v","$RefreshReg$"],"sources":["C:/Users/DELL/Desktop/object_locator/object-locator/src/MyComponents/voice.js"],"sourcesContent":["import React, { useState } from 'react';\r\n\r\nconst Voice = () => {\r\n    const [recording, setRecording] = useState(false);\r\n    const [audioText, setAudioText] = useState('');\r\n\r\n    const handleButtonClick = async () => {\r\n        try {\r\n      setRecording(true);\r\n\r\n      // Make a request to the Python backend to start recording\r\n      const response = await fetch('http://localhost:5000/api/record-sound', {\r\n        method: 'POST',\r\n      });\r\n      const resultData = await response.json();\r\n      setAudioText(resultData.text);\r\n        setRecording(false);\r\n    } catch (error) {\r\n      console.error('Error:', error);\r\n      setRecording(false);\r\n    }\r\n\r\n    };\r\n\r\n    return (\r\n    <div>\r\n      <button onClick={handleButtonClick} disabled={recording}>\r\n        {recording ? 'Recording...' : 'Record Sound'}\r\n      </button>\r\n      <p>{audioText}</p>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default v\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,MAAMC,KAAK,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAChB,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGN,QAAQ,CAAC,KAAK,CAAC;EACjD,MAAM,CAACO,SAAS,EAAEC,YAAY,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAE9C,MAAMS,iBAAiB,GAAG,MAAAA,CAAA,KAAY;IAClC,IAAI;MACNH,YAAY,CAAC,IAAI,CAAC;;MAElB;MACA,MAAMI,QAAQ,GAAG,MAAMC,KAAK,CAAC,wCAAwC,EAAE;QACrEC,MAAM,EAAE;MACV,CAAC,CAAC;MACF,MAAMC,UAAU,GAAG,MAAMH,QAAQ,CAACI,IAAI,CAAC,CAAC;MACxCN,YAAY,CAACK,UAAU,CAACE,IAAI,CAAC;MAC3BT,YAAY,CAAC,KAAK,CAAC;IACvB,CAAC,CAAC,OAAOU,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,QAAQ,EAAEA,KAAK,CAAC;MAC9BV,YAAY,CAAC,KAAK,CAAC;IACrB;EAEA,CAAC;EAED,oBACAJ,OAAA;IAAAgB,QAAA,gBACEhB,OAAA;MAAQiB,OAAO,EAAEV,iBAAkB;MAACW,QAAQ,EAAEf,SAAU;MAAAa,QAAA,EACrDb,SAAS,GAAG,cAAc,GAAG;IAAc;MAAAgB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACtC,CAAC,eACTtB,OAAA;MAAAgB,QAAA,EAAIX;IAAS;MAAAc,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACf,CAAC;AAEV,CAAC;AAAApB,EAAA,CA9BKD,KAAK;AAAAsB,EAAA,GAALtB,KAAK;AAgCX,eAAeuB,CAAC;AAAA,IAAAD,EAAA;AAAAE,YAAA,CAAAF,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}